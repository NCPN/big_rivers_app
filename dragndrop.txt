

'====================================================================
'Use the OLEDragOver event of the TreeView control to select the
'node to drag, and to highlight the target nodes where the drop will
'occur when you release the mouse. This procedure sets the selected
'node to drag once. After that, if a node is already selected, the
'procedure assumes it was set during an earlier call in the dragging
'process and it does not reset it.  The second half of this procedure
'highlights the node you are dragging over.
'====================================================================

' ---------------------------------
' SUB:          tvwTree_OLEDragDrop
' Description:  treeview OLE drag/drop actions
' Assumptions:  -
' Parameters:   -
' Returns:      -
' Throws:       none
' References:   none
' Source/date:
'   https://support.microsoft.com/en-us/kb/209898
' Adapted:      Bonnie Campbell, July 10, 2015 - for NCPN tools
' Revisions:
'   BLC - 7/10/2015 - initial version
' ---------------------------------
Private Sub tvwTree_OLEDragOver(Data As Object, Effect As Long, _
        Button As Integer, Shift As Integer, x As Single, y As Single, _
        State As Integer)

On Error GoTo Err_Handler

    Dim oTree As TreeView

    'Create a reference to the TreeView control.
    Set oTree = Me!tvwTree.Object

    'If no node is selected, select the first node you dragged over.
    If oTree.SelectedItem Is Nothing Then
        Set oTree.SelectedItem = oTree.HitTest(x, y)
    End If

    'Highlight the node being dragged over as a potential drop target.
    Set oTree.DropHighlight = oTree.HitTest(x, y)

Exit_Sub:
    Exit Sub
    
Err_Handler:
    Select Case Err.Number
      Case Else
        MsgBox "Error #" & Err.Number & ": " & Err.Description, vbCritical, _
            "Error encountered (#" & Err.Number & " - tvwTree_OLEDragOver[frm_Tree])"
    End Select
    Resume Exit_Sub
End Sub

'==================================================================
'The OLEDragDrop event moves the selected node on the TreeView
'control to its new location and changes the corresponding record in
'the Employees table. The procedure first checks that the TreeView
'has a selected node. If so, it continues to check if a drop target
'node is highlighted. If no node is highlighted, then the user has
'dragged the node off the tree and dropped it into a blank area, and
'the procedure adds a branch to the root of the tree. If a node is
'highlighted, the procedure modifies the Employee table's ReportTo
'field accordingly and sets the selected node's parent property
'to the node that has the drop highlight.
'==================================================================
' ---------------------------------
' SUB:          tvwTree_OLEDragDrop
' Description:  treeview drag/drop actions
' Assumptions:  -
' Parameters:   -
' Returns:      -
' Throws:       none
' References:   none
' Source/date:
'   https://support.microsoft.com/en-us/kb/209898
' Adapted:      Bonnie Campbell, July 10, 2015 - for NCPN tools
' Revisions:
'   BLC - 7/10/2015 - initial version
' ---------------------------------
Private Sub tvwTree_OLEDragDrop(Data As Object, Effect As Long, _
        Button As Integer, Shift As Integer, x As Single, y As Single)
    On Error GoTo Err_Handler

    Dim oTree As TreeView
    Dim strKey As String, strText As String
    Dim nodeNew As Node, nodeDragged As Node
    Dim db As Database
    Dim rs As Recordset

    Set db = CurrentDb

    'Open the Employees table for editing.
    Set rs = db.OpenRecordset("Employees", dbOpenDynaset)

    'Create a reference to the TreeView control.
    Set oTree = Me!tvwTree.Object

    'If nothing is selected for drag, do nothing.
    If oTree.SelectedItem Is Nothing Then
    Else
        'Reference the selected node as the one being dragged.
        Set nodeDragged = oTree.SelectedItem
        'If the node was dragged to an empty space, update the
        'Employees table and make this employee a root node.
        If oTree.DropHighlight Is Nothing Then
            'Save the key and the text to use when you re-add the node.
            strKey = nodeDragged.key
            strText = nodeDragged.text
            'Delete the current node for the employee.
            oTree.Nodes.Remove nodeDragged.index
            'Locate the record in the Employees table and update it.
            rs.FindFirst "[EmployeeID]=" & Mid(strKey, 2)
            rs.Edit
            rs![ReportsTo] = Null
            rs.Update
            'Add this employee as a root node.
            Set nodeNew = oTree.Nodes.Add(, , strKey, strText)
            'Add all the child nodes for this employee.
            'AddChildren nodNew, rs
            'If you are not dropping the node on itself.
        ElseIf nodeDragged.index <> oTree.DropHighlight.index Then
            'Set the drop target as the selected node's parent.
            Set nodeDragged.Parent = oTree.DropHighlight
            'Locate the record in the Employees table and update it.
            rs.FindFirst "[EmployeeID]=" & Mid(nodeDragged.key, 2)
            rs.Edit
            rs![ReportsTo] = Mid(oTree.DropHighlight.key, 2)
            rs.Update
        End If
    End If

    'Deselect the node
    Set nodeDragged = Nothing

    'Unhighlight the nodes.
    Set oTree.DropHighlight = Nothing

Exit_Sub:
    Exit Sub
    
Err_Handler:
    'If you create a circular branch.
    If Err.Number = 35614 Then
        MsgBox "A supervisor cannot report to a subordinate.", _
            vbCritical, "Move Cancelled"
    Else
        MsgBox "An error occurred while trying to move the node.  " & _
            "Please try again." & vbCrLf & Err.Description
    End If
    Select Case Err.Number
      Case Else
        MsgBox "Error #" & Err.Number & ": " & Err.Description, vbCritical, _
            "Error encountered (#" & Err.Number & " - tvwTree_OLEDragDrop[frm_Tree])"
    End Select
    Resume Exit_Sub
End Sub


'-------------------------
' File Drag/Drop
'-------------------------
' http://bytes.com/topic/access/answers/954103-how-do-you-make-drag-drop-possible-pictures
' http://www.mrexcel.com/forum/excel-questions/843330-visual-basic-applications-drag-drop-filepath.html
' http://stackoverflow.com/questions/20569959/vba-drag-and-drop-file-to-user-form-to-get-filename-and-path
' http://www.vb123.com/Pages/kb/201202_ds_drag.aspx
' http://www.vb123.com/pages/kb/200402_ds_aa.aspx
' http://www.vbforums.com/showthread.php?722153-Allowing-a-Visual-Basic-Application-to-Accept-Drag-and-Drop-Files
' http://blogannath.blogspot.ca/2010/05/microsoft-access-tips-tricks-using.html
' https://msdn.microsoft.com/en-us/library/office/aa163948(v=office.10).aspx
' http://stackoverflow.com/questions/19280524/raising-event-from-object-in-custom-collection-class
' TheSimleyCoder, March 17, 2013
' http://bytes.com/topic/access/answers/947863-how-create-drag-drop-field-files

'Dim varRetVal
 
'varRetVal = Shell("Explorer.exe", vbNormalFocus)
' For intCounter = 1 to UBound(Data.Files)
' strPath = Data.Files(1)

Private Sub TreeView1_OLEDragDrop(Data As Object, Effect As Long, Button As Integer, Shift As Integer, x As Single, y As Single)
Dim nodX As Node
Dim varFileName As Variant
Dim strKey As String
 
If Shift = 1 Then       'only if Shift is held, Drag-N-Drop
  If Data.GetFormat(ccCFFiles) Then
    For Each varFileName In Data.Files
     '1-Relative, tvwChild-Relationship, "g"-Key, "George"-Text
     'The Unique Key will be the Absolute Path to the File without the Extension
     'The Displayed Text will be the Absolute Path to the File with the Extension
     strKey = Left$(varFileName, Len(varFileName) - 4)
     Set nodX = TreeView1.Nodes.Add(1, tvwChild, strKey, varFileName)
    Next
  Else    'Data is not in the desired Format
    Effect = ccOLEDropEffectNone
  End If
Else
End If
End Sub

' http://vbadud.blogspot.com/2007/05/drag-drop-files-to-text-box.html
'Show File Name in Text Box using Drag & Drop
Private Sub TextBox1_OLEDragDrop(Data As DataObject, Effect As Long, Button As Integer, Shift As Integer, x As Single, y As Single)
Dim i1 As Integer '* Files Counter

On Error GoTo Err_Trap

If Data.GetFormat(vbCFFiles) = True Then
i1 = Data.Files.count
If i1 = 1 Then
If InStr(1, LCase$(Data.Files(i1)), ".xls") Then
txtExcel.text = Data.Files(i1)
End If
End If
End If

' ------------------------------------------
' Error Handling
' ------------------------------------------
Err_Trap:
If Err <> 0 Then
Debug.Assert Err = 0
Err.Clear
End If
End Sub

Private Sub CmdBookLocationPicker1_Click()
Dim fd As FileDialog
Dim strFolderPath As String
Dim DefaultPath As String
If IsNull(Me.TxtBookLocation) Then
DefaultPath = CurrentProject.Path
Else
DefaultPath = ExtractPathname(Replace(Me.TxtBookLocation, ".\", CurrentProject.Path & "\"))
End If
'Display the file dialog box and allow the user to select the location to save the file.
Set fd = Application.FileDialog(msoFileDialogFilePicker)
With fd
.InitialView = msoFileDialogViewDetails
.AllowMultiSelect = False
.InitialFileName = DefaultPath
.Title = "Pick An Ebook"

If .Show Then
Me.TxtBookLocation = Replace(fd.SelectedItems(1), CurrentProject.Path, ".")
End If
End With
If IsNull(Me.TxtBookLocation) Then
Me.CmdRead.Enabled = False
Else
Me.CmdRead.Enabled = True
Call TxtBookLocation_AfterUpdate
End If
Me.TxtBookTitle.SetFocus
End Sub

' http://blogannath.blogspot.com/2010/05/microsoft-access-tips-tricks-using.html
Private Sub CmdBookLocationPicker_Click()
Dim fd As FileDialog
Dim strFolderPath As String
Dim DefaultPath As String
If IsNull(Me.TxtBookLocation) Then
DefaultPath = CurrentProject.Path
Else
DefaultPath = ExtractPathname(Replace(Me.TxtBookLocation, ".\", CurrentProject.Path & "\"))
End If
'Display the file dialog box and allow the user to select the location to save the file.
Set fd = Application.FileDialog(msoFileDialogFilePicker)
With fd
.InitialView = msoFileDialogViewDetails
.AllowMultiSelect = False
.InitialFileName = DefaultPath
.Title = "Pick An Ebook"

If .Show Then
Me.TxtBookLocation = Replace(fd.SelectedItems(1), CurrentProject.Path, ".")
End If
End With
If IsNull(Me.TxtBookLocation) Then
Me.CmdRead.Enabled = False
Else
Me.CmdRead.Enabled = True
Call TxtBookLocation_AfterUpdate
End If
Me.TxtBookTitle.SetFocus
End Sub

' Wayne Phillips, March 3, 2010
' http://www.everythingaccess.com/tutorials.asp?ID=Accessing-detailed-file-information-provided-by-the-Operating-System
' Get image properties / exif data



Private Sub lv_FileDropper_OLEDragDrop(Data As Object, Effect As Long, Button As Integer, Shift As Integer, x As Single, y As Single)
'**********************************************************
'* Purpose: The listview Control hsa a OLEDragDrop function.
'*          It is used to accept files.
'**********************************************************
On Error GoTo Err_Handler
       
   'Make sure there is a record active.
   If Me.tb_CaseID & "" = "" Then
      MsgBox "Please create the case before adding files", vbOKOnly + vbInformation, gAppName
      Exit Sub
   End If
   
    
    Dim strType As String
    If Data.GetFormat(15) Then
        strType = "Files"
    ElseIf Data.GetFormat(1) And Data.GetFormat(13) Then
        strType = "Email" 'I hope
        MsgBox "Emails not currently accepted as Drag and drop types", vbOKOnly + vbInformation, gAppName
        Exit Sub
   Else
      MsgBox "You tried to drop a unsupported type into " & gAppName & vbNewLine & _
            "Please only add regular files", vbOKOnly + vbInformation, gAppName
    End If
    

        'Variables
            Dim strFilePath As String
        
        'Check to see that only 1 file was dropped
            If Data.Files.count <> 1 Then
                MsgBox "More then 1 file was placed in the Document Bin" & vbNewLine & "Please, only 1 document at a time"
                Exit Sub
            End If
            
            strFilePath = Data.Files(1)
            If GetAttr(strFilePath) = vbDirectory Then
                MsgBox "You dragged an entire folder, please kind sir, only 1 document at a time"
                Exit Sub
            End If
            
            Dim strFileExt As String
            strFileExt = TSCf_strGetFileExt(strFilePath)
            
            If strFileExt = ".lnk" Then
                    MsgBox "You tried to place a file shortcut in the document registry. Please only place actual documents"
                    Exit Sub
            End If
      'We are now satisfied that we have a single document dragged and wish to save that.
         If Not AddFile(strFilePath, Me.tb_CaseID) Then
            MsgBox "The file could not be added", vbOKOnly + vbCritical, gAppName
            Exit Sub
         Else
            Me.frm_CaseDocuments.Requery
         End If
      
ExitSub:
   Exit Sub


Err_Handler:
   MsgBox Err.Number & Err.Description, vbOKOnly + vbCritical, gAppName & ": Error"
   Resume ExitSub
    
End Sub



' http://bytes.com/topic/access/answers/954103-how-do-you-make-drag-drop-possible-pictures
' A Dezii, January 14, 2014
Private Sub TreeView1_OLEDragDrop(Data As Object, Effect As Long, Button As Integer, Shift As Integer, x As Single, y As Single)
Dim nodX As Node
Dim varFileName As Variant
Dim strKey As String
 
If Shift = 1 Then       'only if Shift is held, Drag-N-Drop
  If Data.GetFormat(ccCFFiles) Then
    For Each varFileName In Data.Files
     '1-Relative, tvwChild-Relationship, "g"-Key, "George"-Text
     'The Unique Key will be the Absolute Path to the File without the Extension
     'The Displayed Text will be the Absolute Path to the File with the Extension
     strKey = Left$(varFileName, Len(varFileName) - 4)
     Set nodX = TreeView1.Nodes.Add(1, tvwChild, strKey, varFileName)
    Next
  Else    'Data is not in the desired Format
    Effect = ccOLEDropEffectNone
  End If
Else
End If
End Sub